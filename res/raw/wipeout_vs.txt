// Vertex Shader. 

attribute vec4 Position;
attribute vec2 TextureCoord;

uniform mat4 WorldMatrix;

varying vec2 TextureCoordOut;
varying float AlphaOut;
varying float TextureNum;

uniform float AniRatio;		//애니 비율
uniform int Flag;

//Flags
#define LEFT	0
#define RIGHT	1
#define UP		2
#define DOWN	3


float AT = 0.9;		//에니메이션 시간

/*
	< 비틀기 애니메이션에 대한 공식 >
	by Isaac Lee
	2011.09.20
	
	AniRatio : 외부에서 주어지는 애니메이션 진행 비율 (0~1)
	AT : 개별 가로축 비틀기 애니메이션이 완료되는 비율 (AniRatio에 대한 상대적 비율)
	hr : Mesh의 y값의 전체 height길이에 대한 비율 (0~1)
	ratio : 개별 가로축에 대한 회전 비율 (0~1)
	theta : 최종적으로 회전 시킬 radian값
	
	ratio = (AR - hr * (1 - AT)) / AT
	theta = ratio * PI 
*/

void main(void)
{
    
    TextureCoordOut = TextureCoord;
    TextureNum = 0.0;
	AlphaOut = 1.0;    
    vec4 pos = Position;
    
    //Animation 계산을 한다.
    //높이에 따른 계산을 해야 할듯하다. (pos의 y는 -1~+1)
    float hr = 0.0;
    
    if(Flag == RIGHT)	//가로모드
    { 
	    if(pos.x != -1.0)
	    {
	    	if(pos.x == 0.0)	//B일때
	    		hr = 1.0;
	    		
	    	if(pos.x == 1.0)	//C일때
	    	{
	    		hr = 0.0;
				AlphaOut = 0.0;    
	    	}
	
	        float ratio = (AniRatio - hr*(1.0 - AT) ) / AT;
		    if(ratio < 0.0) ratio = 0.0;
		    if(ratio > 1.0) ratio = 1.0;
	
	    	pos.x = -1.0 + 2.0 * ratio;	//실제 위치를 구함
	
			TextureCoordOut.x = ratio;	//Texture UV를 계산
	    }
    }
    else if(Flag == LEFT)	//가로모드
    { 
	    if(pos.x != 1.0)
	    {
	    	if(pos.x == 0.0)	//B일때
	    		hr = 1.0;
	    		
	    	if(pos.x == -1.0)	//C일때
	    	{
	    		hr = 0.0;
				AlphaOut = 0.0;    
	    	}
	
	        float ratio = (AniRatio - hr*(1.0 - AT) ) / AT;
		    if(ratio < 0.0) ratio = 0.0;
		    if(ratio > 1.0) ratio = 1.0;
	
	    	pos.x = +1.0 - 2.0 * ratio;	//실제 위치를 구함
	
			TextureCoordOut.x = 1.0 - ratio;	//Texture UV를 계산
	    }
    }
    else if(Flag == UP)	//세로모드
    { 
	    if(pos.y != -1.0)
	    {
	    	if(pos.y == 0.0)	//B일때
	    		hr = 1.0;
	    		
	    	if(pos.y == 1.0)	//C일때
	    	{
	    		hr = 0.0;
				AlphaOut = 0.0;    
	    	}
	
	        float ratio = (AniRatio - hr*(1.0 - AT) ) / AT;
		    if(ratio < 0.0) ratio = 0.0;
		    if(ratio > 1.0) ratio = 1.0;
	
	    	pos.y = -1.0 + 2.0 * ratio;	//실제 위치를 구함
	
			TextureCoordOut.y = 1.0-ratio;	//Texture UV를 계산
	    }
    }
   	else if(Flag == DOWN)	//세로모드
    { 
	    if(pos.y != 1.0)
	    {
	    	if(pos.y == 0.0)	//B일때
	    		hr = 1.0;
	    		
	    	if(pos.y == -1.0)	//C일때
	    	{
	    		hr = 0.0;
				AlphaOut = 0.0;    
	    	}
	
	        float ratio = (AniRatio - hr*(1.0 - AT) ) / AT;
		    if(ratio < 0.0) ratio = 0.0;
		    if(ratio > 1.0) ratio = 1.0;
	
	    	pos.y = +1.0 - 2.0 * ratio;	//실제 위치를 구함
	
			TextureCoordOut.y = ratio;	//Texture UV를 계산
	    }
    }
    
	//최종 계산    
    gl_Position =  WorldMatrix * pos;

}
